---
- hosts: all
  become: true
  vars:
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - nginx
          - git
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker, Elasticsearch and rdflib Module for Python
      pip:
        name: 
          - docker
          - elasticsearch
          - rdflib

    - name: Install deployscripts
      git:
        repo: https://github.com/Daredha/deployscripts.git
        dest: /opt/deployscripts
        version: main

    - name: Deploy virtuoso server
      community.docker.docker_compose:
        project_name: virtuoso
        build: true
        files:
          - /opt/deployscripts/virtuoso/docker-compose.yml

    - name: Deploy elastic server
      community.docker.docker_compose:
        project_name: elastic
        build: true
        files:
          - /opt/deployscripts/elastic/docker-compose.yml

    - name: Run populate_elastic.py
      command: python3 /opt/deployscripts/elastic/populate_elastic.py

    - name: Test virtuoso
      uri:
        url: http://localhost:8890/sparql
        method: GET
        body_format: json
        status_code: 200
      register: virtuoso_test

    - name: Test elasticsearch
      uri:
        url: http://localhost:9200
        method: GET
        body_format: json
        status_code: 200
      register: elasticsearch_test

    - debug:
        var: virtuoso_test
        msg: "Virtuoso test: {{ virtuoso_test.status_code }}"

    - debug:
        var: elasticsearch_test
        msg: "Elasticsearch test: {{ elasticsearch_test.status_code }}"

    #- name: Pull default Docker image
    #  community.docker.docker_image:
    #    name: "{{ default_container_image }}"
    #    source: pull

    #- name: Create default containers
    #  community.docker.docker_container:
    #    name: "{{ default_container_name }}{{ item }}"
    #    image: "{{ default_container_image }}"
    #    command: "{{ default_container_command }}"
    #    state: present
    #  with_sequence: count={{ container_count }}